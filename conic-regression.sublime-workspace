{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"reg",
				"regExNumber"
			],
			[
				"The",
				"Theta2"
			],
			[
				"sin",
				"singleWordList"
			],
			[
				"yte",
				"ytest3w"
			],
			[
				"yva",
				"yval3w"
			],
			[
				"yv",
				"yval2w"
			],
			[
				"input",
				"inputSize"
			],
			[
				"num",
				"number"
			],
			[
				"Th",
				"Theta2"
			],
			[
				"th",
				"Theta1"
			],
			[
				"end",
				"endfunction"
			],
			[
				"ytest",
				"ytestnd"
			],
			[
				"cell",
				"cell2mat"
			],
			[
				"max",
				"maxWords"
			],
			[
				"min",
				"minNonZeroCode"
			],
			[
				"vo",
				"vowelDominant"
			],
			[
				"empty",
				"emptyCode0"
			],
			[
				"voew",
				"vowelDominant"
			],
			[
				"is1of",
				"is1ofForm0"
			],
			[
				"stop",
				"stoppedEarly"
			],
			[
				"err",
				"error_train"
			],
			[
				"warning",
				"warningState"
			],
			[
				"resu",
				"resultMeanError"
			],
			[
				"save",
				"savewarn"
			],
			[
				"yt",
				"ytest"
			],
			[
				"sing",
				"singlewords"
			],
			[
				"cat",
				"cat2Data"
			],
			[
				"str",
				"strlengtht"
			],
			[
				"vow",
				"vowelDelims"
			],
			[
				"vowe",
				"vowelDelims"
			],
			[
				"voe",
				"vowelDelims"
			],
			[
				"error",
				"error_train"
			],
			[
				"sve",
				"saveFileName"
			],
			[
				"sav",
				"savedFiles"
			],
			[
				"test",
				"testResult"
			],
			[
				"train",
				"trainResult"
			],
			[
				"xva",
				"xvalLabels"
			],
			[
				"su",
				"subset"
			],
			[
				"Xt",
				"Xtest"
			],
			[
				"Xv",
				"Xval"
			],
			[
				"l",
				"label"
			],
			[
				"cod",
				"ccodeSentences"
			],
			[
				"ends",
				"endswitch"
			],
			[
				"sen",
				"sentencesCat0"
			],
			[
				"spli",
				"splitLabelledData"
			],
			[
				"word",
				"word2"
			],
			[
				"ccode",
				"ccodeSentences"
			],
			[
				"ccod",
				"ccodeSentences"
			],
			[
				"sent",
				"sentences"
			],
			[
				"sente",
				"sentencesToNumbers"
			],
			[
				"len",
				"length"
			],
			[
				"el",
				"elLength"
			],
			[
				"spl",
				"split1"
			],
			[
				"con",
				"consonants"
			],
			[
				"cs",
				"csize"
			],
			[
				"uni",
				"units"
			],
			[
				"ar",
				"arrayfun"
			],
			[
				"cons",
				"consonantIndex"
			],
			[
				"vs",
				"vsize"
			],
			[
				"lea",
				"learningTimeBudgetSeconds"
			],
			[
				"xl",
				"xlabel"
			],
			[
				"time",
				"timeElapsed"
			],
			[
				"learn",
				"learningTimeBudgetSeconds"
			],
			[
				"lear",
				"learningTimeBudgetSeconds"
			],
			[
				"cost",
				"costCurve"
			],
			[
				"y",
				"ylabel"
			],
			[
				"le",
				"legends"
			],
			[
				"leg",
				"legends"
			],
			[
				"ini",
				"initial_Theta1"
			],
			[
				"rand",
				"randomSubsetOfRows"
			],
			[
				"subse",
				"Subset"
			],
			[
				"pol",
				"polynomialiseTo"
			],
			[
				"lam",
				"lambdas"
			],
			[
				"lamd",
				"lambda_vec"
			],
			[
				"lambd",
				"lambda_vec"
			],
			[
				"la",
				"lambda_vec"
			],
			[
				"row",
				"rowsToShow"
			],
			[
				"X",
				"Xval"
			],
			[
				"tim",
				"timeBudgetSeconds"
			],
			[
				"sub",
				"subsetOfData"
			],
			[
				"the",
				"Theta2"
			],
			[
				"delta",
				"delta2"
			],
			[
				"del",
				"delta2"
			],
			[
				"Del",
				"deltaH"
			],
			[
				"theta",
				"Theta1"
			],
			[
				"J",
				"JunregPerLabel"
			],
			[
				"Theta",
				"Theta1"
			],
			[
				"Thet",
				"Theta2"
			],
			[
				"zero",
				"zeroThenOnes"
			],
			[
				"all",
				"all_theta"
			],
			[
				"thet",
				"thetaExcept1"
			],
			[
				"com",
				"computeCostMulti"
			],
			[
				"probXI",
				"probXIsInToday"
			],
			[
				"try",
				"try catch finally"
			],
			[
				"readdir",
				"fs.readdir(path, callback);"
			],
			[
				"exit",
				"process.exit(code);"
			],
			[
				"start",
				"startbackup"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 147.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Discover Packages"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"Snippet: ",
				"Snippet: html"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"cls",
			"print( os.environ['LOGNAME'] )",
			"print( os.environ['NODE_PATH'] )",
			"import os",
			"print( os.environ['OS'] )",
			"print( os.environ['NODE_PATH'] )",
			"print( os.environ[\"NODE_PATH\"] )",
			"print os.environ[\"NODE_PATH\"]",
			"import os",
			"$NODE_PATH",
			"1+1",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/carrolls/Desktop/Software/Octave/conic-regression"
	],
	"file_history":
	[
		"/Users/carrolls/Desktop/Software/Octave/conic-regression/conic-regression.sublime-project",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/learner/predict.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/nnprofiler.m",
		"/Users/carrolls/Desktop/bake off notes.txt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/sentencesJobDone.txt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/learner1trainingsets.mattxt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/CSharp Language Specification 3.0.txt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/analyseLineScript.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/analyseLine.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/loadLearner1.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/Learner1BestSoFarMatrices.mattxt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/Learner1 93pc 12-04 11-11.mattxt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/parseLine.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/createLearner1TrainingSets.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/sentencesJobNotDone.txt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccdecodeTests.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccode.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccodeSentences.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccodeSentencesTests.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/learner/nnCostFunction.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccdecode.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccodeSentencesFromFile.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/convert/ccodeTests.m",
		"/Users/carrolls/Desktop/Software/elm/Did-You-Get-The-Message-Commanding-the-Elm-Architecture/package.json",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/evaluate/validationCurveNN.m",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/singlewords excluding synonyms of done.txt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/data/singlewords.txt",
		"/Users/carrolls/Desktop/Software/NetNetRunner/Learner1Octave/src/learner/fmincg.m",
		"/Users/carrolls/Downloads/web-starter-kit-0.6.4/app/humans.txt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/nnprofiler.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/createLearner1TrainingSets.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccodeSentences.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccode.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccodeTests.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccodeSentencesTests.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/data/sentencesJobDone.txt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/filereadlines.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/randomSubset.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/randomSubsetOfRows.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/data/singlewords.txt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/predict.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/validationCurveNN.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/learningCurveNN.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/.octaverc",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/learner1-2016-11-24-23-56-59",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/createLearner1TrainingSets.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccodeSentencesFromFile.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/learner1trainingsets.mattxt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/fileReadLines.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/buildSentenceParser.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/sentencesJobDone.txt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/CSharp Language Specification 3.0.txt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccodeSentence.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/sentencesToNumbersTests.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/ccode2.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/sentencesToNumbers.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/sentenceToNumbers.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/trainingSetsFrom.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/dmetaph.cpp",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/FourSentences.txt",
		"/Users/carrolls/Desktop/CSharp Language Specification 3.0.txt",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/sentences.mattext",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/saveTestSentences.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/lib/submitWithConfiguration.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/CCode.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/CCode2.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/CCode1.m",
		"/Users/carrolls/Desktop/Development.feature",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/CCodeTests.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/convert/dmetaph.m",
		"/usr/local/lib/python2.7/site-packages/pip/wheel.py",
		"/usr/local/lib/python2.7/site-packages/pip/req/req_install.py",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/init.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/SmallSingleColumnTrainingSet.mattext",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/nnprofiler.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/nnProfiler.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/profileNN.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/addPolynomialFeatures.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/normalled.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/normalled.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/nnCostFunction.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/fmincg.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/labelsToVectors.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/linearRegCostFunction.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/learningCurveLinearReg.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/inputValues.mattext",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/testNN.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/learner/trainNN.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/validationCurveLinearReg.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/learningCurve.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/src/evaluate/validationCurve.m",
		"/Users/carrolls/Desktop/Software/Octave/Learner1/Learner1.sublime-project",
		"/Users/carrolls/Desktop/Nearly Done/capita contract notes.txt",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/checkNNGradients.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/ex4.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/randInitializeWeights.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/fmincg.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/nnCostFunction.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/debugInitializeWeights.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/computeNumericalGradient.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/sigmoidGradient.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/sigmoid.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/displayData.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/ex4weights.mat",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex4/ex4/ex4data1.mat",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex3/ex3/predict.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex3/ex3/lrCostFunction.m",
		"/Volumes/PD/The smug style in American liberalism.inetloc",
		"/Users/carrolls/OneDrive/My Notes/Pol and Soc/Stoknes EP list of submerged factors",
		"/Volumes/PD/Quotes.txt",
		"/Applications/Pharo5.0.app/Contents/Resources/Squeak VM.r",
		"/Users/carrolls/Desktop/Home/Other Work/PD/Quotes.txt",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex3/ex3/ex3_nn.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex3/ex3/predictOneVsAll.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex3/ex3/oneVsAll.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex3/ex3/ex3.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex2/ex2/costFunctionReg.m",
		"/Users/carrolls/OneDrive/My Notes/Software Architecture/Udi dahan on SA on vimeo 2016.txt",
		"/Users/carrolls/Applications/upz600",
		"/Users/carrolls/Applications/upZino",
		"/Users/carrolls/Library/Preferences/com.apple.dock.plist",
		"/Users/carrolls/Downloads/application-pdf",
		"/Users/carrolls/RiderProjects/BugDemos/Program.cs",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex2/ex2/predict.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex2/ex2/costFunction.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex2/ex2/ex2.m",
		"/Users/carrolls/Desktop/Courses/Coursera ML/machine-learning-ex2/ex2/plotData.m"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"<open folders>",
			"workDaysPerYear"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"-1",
			"-flintmax",
			"permss",
			"X\\s*=",
			"X",
			"singleWordList",
			"consts.padding",
			"reverse",
			"-flintmax",
			"flintmax",
			"18431350012",
			"18431",
			"ticket",
			"is",
			"done",
			"complete",
			"0",
			"warningState",
			"oldWarningState",
			"savewarn",
			"%f",
			"unitsV",
			"vowelfirst",
			"'(\\d)'; '(\\w+)'",
			"cat1Data",
			"cat2Data",
			" ",
			"(\\w+)",
			"\"",
			"\"[\", \"\"), \"]\", \"\"), \" \", \"-\"",
			"'",
			"100000",
			"1",
			"\\[[^]]+](.*)",
			"endswitch",
			"sentenceToNumbers",
			"\"",
			"h",
			"w",
			",",
			"\n          ",
			", ",
			"\\.\\.\\.",
			",|\\.\\.\\.",
			"knownLetters",
			"vwls",
			"consnants",
			"codeC",
			"alen",
			"cs",
			"','",
			"persistent ",
			"(.)",
			"\\t",
			"(\\w+)",
			"([^.])$",
			"(\\w+)",
			"([^.])$",
			"figure",
			"timeBudgetSeconds",
			"learning",
			"allthetas",
			"10",
			"initial_nn_params",
			"initial_Theta",
			"stem",
			"^pause",
			"lambda",
			"Theta(\\d)WithoutBiases",
			"deltaO",
			"outputsForAllRows",
			"outputs",
			"initial_theta",
			"hθ",
			"(?<=\\W)c(?=\\W)",
			"(?<=\\W)c(?>\\W)",
			"\\t",
			"    ",
			"YOUR",
			"\\n<dt",
			"(id=\"\\w+)\\s",
			"(.*)",
			".*",
			"69.28.199.10",
			"\\s+",
			"\\s",
			"ARCHITECTURE AND THE CHILD WITHIN !\\d+\\s?\\n\\s*\\d+\\.",
			"\\(\\d+\\) ",
			"  ",
			"(\\n|\\t)",
			"+",
			"\\n\\| ",
			"--",
			"blank",
			"EA",
			"   x ",
			"proposa",
			"proposa;",
			"propo",
			"   ",
			"[^ a-zA-Z]",
			"wrap",
			"+",
			"nTeamMembers",
			"workingDaysPerYear",
			"wolcmd",
			"Synergy",
			"Synerg",
			"2015",
			"</p>",
			"<p>",
			"</p>",
			"</p>\\n<p>",
			"outputLengthAndAllData",
			".filter( \n\t\t(x,i,l) => {  return filters.indexOf( path.extname(x) ) != -1 ; } \n\t)",
			"assert",
			"countChars",
			"count",
			"GB",
			"buffer"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"-1",
			"padShortSentence",
			"jobNotDone",
			"consts.padding",
			"job",
			"-flintmax",
			"pathWarning",
			"warningOnOffStateWas",
			"oldWarningState",
			"%g",
			"unitsVowelDominant",
			"vowelDominant",
			"'\\2'; '\\1'",
			"technicalSentences",
			"technicalSentences.txt",
			"', '",
			"'\\1'",
			"'",
			"\"",
			"123456",
			"100000",
			"'\\1' ",
			"oneSentenceToNumbers",
			"sentenceToNumbers",
			"'",
			" ",
			"",
			"graphemes",
			"vs",
			"cs",
			"consnants",
			"len",
			"array",
			"",
			"'\\1',",
			"  ",
			"'\\1',",
			"\\1 ...",
			"'\\1',",
			"\\1 ...",
			"learningTimeBudgetSeconds",
			"initialThetas",
			"allthetas",
			"th",
			"% pause",
			"theta\\1WithoutBiases",
			"delta2",
			"outputsForAllCases",
			"outputsForAllRows",
			"Zn1",
			"hTheta",
			"label",
			" ",
			"\\n\\n<dt",
			"\\1",
			"<dt runat=\"server\" id=\"dt\\1\">\\1</dt>\\n<dd runat=\"server\" id=\"dd\\1\"></dd>",
			"localhost",
			" ",
			"",
			" ",
			"-",
			" ",
			"dashdash",
			"\\t",
			" ",
			"teamSize",
			"workDaysPerYear",
			"2016",
			"",
			"\\n\\n",
			"",
			"\\n\\n",
			"printResponseLengthAndContent",
			"ensureParametersElseExitAndHelp",
			"countLines",
			"i",
			"string"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 313.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.nodejs":
	{
		"height": 37.0
	},
	"pinned_build_system": "",
	"project": "conic-regression.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 312.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
